<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>blanco.xml.bind</groupId>
	<artifactId>blanco-xmlbinding</artifactId>
	<packaging>jar</packaging>
	<version>2.0.4</version>
	<name>blanco-xmlbinding</name>
	<url>https://igapyon.github.io/blancofw-maven2/</url>

	<dependencies>
		<dependency>
			<groupId>blanco.commons.io</groupId>
			<artifactId>blanco-commons</artifactId>
			<version>2.0.1</version>
		</dependency>
	</dependencies>

	<!-- ===================================== -->
	<!-- blanco Framework standard maven defs. -->
	<!-- v201612241700 ....................... -->
	<!-- ===================================== -->
	<repositories>
		<!-- blancofw repository -->
		<repository>
			<id>blancofw</id>
			<name>blancofw maven repos</name>
			<url>https://igapyon.github.io/blancofw-maven2/</url>
		</repository>
	</repositories>

	<distributionManagement>
		<!-- deploy into local repository for github -->
		<repository>
			<id>deploy-repository</id>
			<name>deployRepository</name>
			<url>file:///${project.basedir}/../../blancofw-maven2</url>
		</repository>
	</distributionManagement>

	<!-- basic spec for jar -->
	<properties>
		<!-- set source as UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<!-- compile as 1.6 compatible -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- copy jar files into lib directory. -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
